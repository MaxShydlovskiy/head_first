Глава 1 Как сделать больше меньшими усилиями

\n    =>  New string
\t    =>  Tabulation
\"    =>  Double quotes
\'    =>  Single quote
\\    =>  BackSlash

to_s  =>  string
to_i  =>  fixnum
to_f  =>  float

 Ruby — интерпретируемый язык.
  Код Ruby не нужно компилировать перед выполнением.

 Переменные не нужно объявлять перед при-
  сваиванием им значений. Также не нужно
  указывать тип переменной.

 Ruby рассматривает все символы от # до кон-
  ца строки как комментарий и игнорирует их.

 Текст, заключенный в кавычки, рассматрива-
  ется как строка, то есть последовательность символов.

 Если в строку Ruby входит конструкция
  #{...}, то выражение в фигурных скобках
  интерполируется (подставляется) в строку.

 При вызове методов могут передаваться
  аргументы, разделенные запятыми.

 Заключать список аргументов в круглые скобки
  не обязательно. Если аргументы отсутствуют,
  не ставьте пустые круглые скобки.

 Используйте методы inspect и p для про-
  смотра отладочной информации по объектам Ruby.

 Для включения специальных символов в стро-
  ки, заключенные в двойные кавычки, использу-
  ются служебные последовательности (такие, как \n и \t).

 Интерактивный интерпретатор Ruby (или irb)
  позволяет быстро проверить результаты вы-
  ражений Ruby.

 Вызов метода to_s для (почти) любого объ-
  екта возвращает строковое представление объекта.
  Вызов to_i для строки преобразует ee в целое число.

 unless — противоположность if; код
  выполняется в том случае, если условие
  ложно.

 until — противоположность while; цикл
  выполняется многократно, пока условие
  не станет истинным.
Команды
Условные команды выполняют содержащийся в них
код в зависи-мости от некоторого условия.

Циклы выполняют содержащий-ся в них код многократно.
Цикл прерывается по некоторому условию.


Глава 2 Методы и классы

